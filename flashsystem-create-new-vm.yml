---
- name: Create VMs based on csv vars_files
  hosts: localhost
  gather_facts: false
  become: false
  vars_files:
    - vars/authentication.yml
  
  tasks:
    - name: Read the csv file containing volume information
      community.general.read_csv:
        path: vars/addvms.csv
      register: added_vms

    - name: Clone vms from templates listed in added_volumes.list
      community.vmware.vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        datacenter: "{{ item.datacenter_name }}"
        esxi_hostname: "{{ item.host_fqdn }}"
        state: present
        folder: "{{ item.folder }}"
        template: "{{ item.template }}"
        name: "{{ item.vm_guest_name }}"
        disk:
          - autoselect_datastore: false
            datastore: "{{ item.esx_datastore_name }}"
            size_gb: 55
          - autoselect_datastore: false
            datastore: "{{ item.esx_datastore_name }}"
            size_gb: 25
        networks:
          - name: "{{ item.network_adapter }}"
            device_type: "{{ item.network_device_type }}"
            ip: "{{ item.ip_addr }}"
            type: static
            netmask: "{{ item.netmask }}"
            gateway: "{{ item.gateway }}"
            connected: true
            start_connected: true
            dns_servers:
             - "{{ item.dns_server_1 }}"
             - "{{ item.dns_server_2 }}"
        wait_for_ip_address: true
        validate_certs: false
        customization:
          domain: "{{ item.domain }}"
          dns_servers:
            - "{{ item.dns_server_1 }}"
            - "{{ item.dns_server_2 }}"
          script_text: |
            #!/bin/bash
            echo "ansible   ALL=NOPASSWD:   ALL" | tee -a /etc/sudoers.d/ansible
        wait_for_customization: true
      ignore_errors: true
      delegate_to: localhost
      register: vm_results
      loop: "{{ added_vms.list }}"

    - name: print out vm_results
      ansible.builtin.debug:
        var: vm_results


