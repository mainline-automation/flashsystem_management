---
- name: Create or validate hosts
  hosts: localhost
  gather_facts: false
  become: false
  vars:
    hostname: 'workflow.bpic.mainline.com'
    _iqn_ : 'iqn.1994-05.com.redhat:fabf787c1d0'
  vars_files:
    - vars/authentication.yml
    # - vars/addvolume.csv
      
  tasks:
  - name: read the csv file
    community.general.read_csv:
      path: vars/addvolume.csv
    register: added_volumes
 
  - name: make sure that host exists using ibm.storage_virtualize.ibm_svc_host and create if they don't
    ibm.storage_virtualize.ibm_svc_host:
      clustername: "{{ clustername }}"
      name: "{{ hostname }}"
      iscsiname: "{{ _iqn_ }}"
      token: "{{ api_token }}"
      state: present
      protocol: scsi
      type: generic
      validate_certs: false
      log_path: '/tmp/svc_create_host.debug'
    
  - name: use ibm.storage_virtualize.ibm_svc_manage_volume with a loop on the variable volumes 
    ibm.storage_virtualize.ibm_svc_manage_volume:
      clustername: "{{ clustername }}"
      log_path: '/tmp/svc_create_volume.debug'
      state: present
      name: "{{ item.name }}"
      size: "{{ item.size }}"
      unit: "{{ item.unit }}"
      thin: "{{ item.thin }}"
      pool: "{{ item.pool }}"
      validate_certs: false
      token: "{{ api_token }}"
    loop: "{{ added_volumes.list}}"

  - name: map volume to host
    ibm.storage_virtualize.ibm_svc_vol_map:
      clustername: "{{ clustername }}"
      host: "{{ hostname }}"
      state: present
      volname: "{{ item.name }}"
      log_path: '/tmp/map_volume_to_host.debug }}'
      token: "{{ api_token }}"
    loop: "{{ added_volumes.list }}"