---
- name: add volumes to FlashSystem
  hosts: localhost
  gather_facts: false
  become: false
  vars_files:
    - vars/authentication.yml
    - vars/volume_host_data.json
      
  tasks:
  - name: read the csv file
    community.general.read_csv:
      path: vars/addvolume.csv
      # key: name
    register: volumes
 
  - name: debug 
    ansible.builtin.debug:
      var: "{{ item }}"
    loop: "{{ hostname | community.general.json_query('isci_name') }}"

  
#   - name: use ibm.storage_virtualize.ibm_svc_manage_volume with a loop on the variable volumes 
#     ibm.storage_virtualize.ibm_svc_manage_volume:
#       clustername: "{{ clustername }}"
#       log_path: '/tmp/svc_create_volume.debug'
#       state: present
#         # username: "{{ username }}"
#         # password: "{{ _password_ }}"
#       name: "{{ item.name }}"
#       size: "{{ item.size }}"
#       unit: "{{ item.unit }}"
#       thin: "{{ item.thin }}"
#       pool: "{{ item.pool }}"
#       validate_certs: false
#       token: "{{ api_token }}"
#     loop: "{{ volumes.list }}"

# - name: Confirm that hosts exists
#   hosts: localhost
#   gather_facts: false
#   become: false
#   vars_files:
#     - vars/authentication.yml 
#   tasks:   
#   - name: read the csv file
#     community.general.read_csv:
#       path: vars/addvolume.csv
#       # key: name
#     register: volumes

#   - name: make sure that host exists using ibm.storage_virtualize.ibm_svc_host and create if they don't
#     ibm.storage_virtualize.ibm_svc_host:
#       clustername: "{{ clustername }}"
#       name: "{{ item.hostname }}"
#       iscsiname: "{{ item.isciname }}"
#       token: "{{ api_token }}"
#       state: present
#       protocol: scsi
#       type: generic
#       validate_certs: "{{ item.validate_certs }}"
#       log_path: '/tmp/flashsystem/validate_host.debug'
#     loop: "{{ volumes.list }}"
      
# - name: Perform mapping to hosts
#   hosts: localhost
#   gather_facts: false
#   become: false
#   vars_files:
#     - vars/authentication.yml 
#   tasks:   
#   - name: read the csv file
#     community.general.read_csv:
#       path: vars/addvolume.csv
#       # key: name
#     register: volumes

#   - name: map volume to host
#     ibm.storage_virtualize.ibm_svc_vol_map:
#       clustername: "{{ clustername }}"
#       host: "{{ item.hostname }}"
#       state: present
#       volname: "{{ item.name }}"
#       log_path: '/tmp/flashsystem/map_volume_to_host.debug }}'
#       token: "{{ api_token }}"
#     loop: "{{ volumes.list }}"