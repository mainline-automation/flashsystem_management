---
- name: Append additional volumes to vars/addvolume.csv
  hosts: localhost
  gather_facts: false
  become: false
  vars_files:
    - vars/authentication.yml
  vars:
    # configuration_type: 'Create volumes'
    # start_var: 2
    # vol_count: 10
    # countby_var: 2
    # vol_base: demo_vol
    # pool: Pool01
    # size: 1024
    # thin: true
    # unit: mb 
  #   os: aix
  #   hostname: bpicaix04
  #   host_fqdn: bpicaix04.bpic.mainline.com
  #   esx_datastore_name: ''
  #   esx_datastore_type : ''


  tasks:
    - when: ("{{configuration_type}}" == 'Create volumes') or ("{{configuration_type}}" == 'Create and map volumes')
      block:
        - name: Make sure that countby_var is at least 1
          ansible.builtin.set_fact:
            countby_var: 1
          when: "{{ countby_var }} == '' or 0"

        - name: Create a variable with a list of values
          create_volume_name:
            vol_base_name: "{{ vol_base }}"
            vol_sequence_begin: "{{ start_var }}"
            vol_count: "{{ vol_count }}"
            vol_sequence_increment: "{{ countby_var }}"
          register: name_list

        - name: Fail if volume already exists
          ansible.builtin.fail:
            msg: "Volume Name {{ item }} already exists. Please correct and try again"
          when: lookup('csvfile', item + ' file=vars/addvolume.csv col=0 delimiter=,')
          loop: "{{ name_list.vol_names }}"

      
    - name: Temporary set_fact for esx_datastore_name
      ansible.builtin.set_fact:
        esx_datastore_name: '' 

    - name: Temporary set_fact for esx_datastore_type
      ansible.builtin.set_fact:
        esx_datastore_type: ''

    - name: build host_fqdn 
      ansible.builtin.set_fact:
        host_fqdn: "{{ hostname }} + {{ domain }}"
    - name: Add lines to vars/addvolume.csv
      ansible.builtin.lineinfile:
        path: vars/addvolume.csv
        line: "{{ item }},{{ pool_select }},{{ size }},{{ thin }},{{ unit }},{{ os }},{{ hostname }},{{ host_fqdn }},
                {{ esx_datastore_name }},{{ esx_datastore_type }}"
      loop: "{{ name_list.vol_names }}"
      delegate_to: localhost

    - name: print contents of vars/addvolume.csv 
      ansible.builtin.debug:
        msg: {{ 'lookup','vars/addvolume.csv' }}
